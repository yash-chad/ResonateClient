{"version":3,"sources":["components/Default.js","components/Sidenav.js","components/Login.js","redux/actions.js","redux/types.js","components/Profile.js","components/Title.js","components/Expense.js","components/Chartcomponent.js","components/ExpenseList.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["Default","Sidenav","className","href","Login","type","onClick","console","log","getExpenses","dispatch","axios","get","then","res","data","payload","err","Profile","this","props","getProfile","Card","style","width","Img","variant","src","user","photo","Body","Title","username","to","Button","Component","mapActionToProps","connect","state","name","title","Expense","expense","scope","counter","category","date","amount","aria-hidden","deleteExpense","_id","fetchExpenses","id","callback","url","expenses","Chartcomponent","chartData","forEach","element","curr","push","length","height","chartType","loader","options","is3D","rootProps","ExpenseList","handleSubmit","e","preventDefault","addExpense","target","value","total","onSubmit","Table","striped","bordered","hover","map","item","key","colSpan","post","App","exact","path","component","Boolean","window","location","hostname","match","initState","middleware","thunk","reducer","combineReducers","action","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e02eb5b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Default() {\r\n  return <div>Hello from Default</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Sidenav() {\r\n  return (\r\n    <div>\r\n      <div className=\"sidenav\">\r\n        <a href=\"/home\">Home</a>\r\n        <a href=\"/profile\">Profile</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GoogleButton from \"react-google-button\";\r\n\r\nexport default function Login() {\r\n  return (\r\n    <div className=\"d-flex justify-content-center mt-3\">\r\n      <a href=\"https://ancient-mountain-80140.herokuapp.com/api/auth/google\">\r\n        <GoogleButton\r\n          type=\"light\" // can be light or dark\r\n          onClick={() => {\r\n            console.log(\"Google button clicked\");\r\n          }}\r\n        ></GoogleButton>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { GET_PROFILE, GET_EXPENSE, ADD_EXPENSE, DELETE_EXPENSE } from \"./types\";\r\n\r\nexport const getProfile = () => (dispatch) => {\r\n  axios\r\n    .get(\r\n      \"https://ancient-mountain-80140.herokuapp.com/api/users/api/users/getProfile\"\r\n    )\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .then((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getExpenses = () => (dispatch) => {\r\n  axios\r\n    .get(\"https://ancient-mountain-80140.herokuapp.com/api/users/api/expense\")\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: GET_EXPENSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .then((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const addExpense = (title, amount, category, callback) => (dispatch) => {\r\n  axios\r\n    .post(\r\n      \"https://ancient-mountain-80140.herokuapp.com/api/users/api/expense/add\",\r\n      {\r\n        title: title,\r\n        amount: amount,\r\n        category: category,\r\n      }\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: ADD_EXPENSE,\r\n        payload: res.data,\r\n      });\r\n      callback();\r\n    })\r\n    .then((err) => {\r\n      console.log(err);\r\n    });\r\n  console.log(callback);\r\n};\r\n\r\nexport const deleteExpense = (id, callback) => (dispatch) => {\r\n  const url =\r\n    \"https://ancient-mountain-80140.herokuapp.com/api/users/api/expense/\" + id;\r\n  axios.get(url).then((res) => {\r\n    dispatch({\r\n      type: DELETE_EXPENSE,\r\n      payload: res.data,\r\n    });\r\n    callback();\r\n  });\r\n};\r\n","export const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_EXPENSE = \"GET_EXPENSE\";\r\nexport const ADD_EXPENSE = \"ADD_EXPENSE\";\r\nexport const DELETE_EXPENSE = \"DELETE_EXPENSE\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProfile } from \"../redux/actions\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n// import styled from \"styled-components\";\r\n\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    this.props.getProfile();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Card style={{ width: \"18rem\" }}>\r\n          <Card.Img variant=\"top\" src={this.props.user.photo} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              <b>Welcome</b> {this.props.user.username}\r\n            </Card.Title>\r\n            {/* <Card.Text>\r\n              Some quick example text to build on the card title and make up the\r\n              bulk of the card's content.\r\n            </Card.Text> */}\r\n            <div>\r\n              <Link to=\"/home\">\r\n                <Button className=\"my-2\" variant=\"primary\">\r\n                  Check your Expenses!\r\n                </Button>\r\n              </Link>\r\n              <a href=\"https://ancient-mountain-80140.herokuapp.com/api/auth/logout\">\r\n                <Button variant=\"primary\">Logout</Button>\r\n              </a>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.data.user,\r\n});\r\nconst mapActionToProps = { getProfile };\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  getProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(Profile);\r\n","import React from \"react\";\r\n\r\nexport default function Title({ name, title }) {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-10 mx-auto my-2 text-center text-title\">\r\n        <h1 className=\"text-capilatize font-weight-bold \">\r\n          <strong className=\"text-blue mx-3\">{name}</strong>\r\n          {title}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteExpense } from \"../redux/actions\";\r\n\r\nclass Expense extends Component {\r\n  render() {\r\n    const { expense } = this.props;\r\n\r\n    return (\r\n      <tr className=\"px-5 mx-2\">\r\n        <th scope=\"row\">{this.props.counter}</th>\r\n        <td> {expense.category}</td>\r\n        <td>{expense.title}</td>\r\n        <td>{expense.date}</td>\r\n        <td>$ {expense.amount}</td>\r\n        <td>\r\n          <i\r\n            className=\"fa fa-trash\"\r\n            aria-hidden=\"true\"\r\n            onClick={() =>\r\n              this.props.deleteExpense(expense._id, this.props.fetchExpenses)\r\n            }\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expenses: state.data.expenses,\r\n});\r\nconst mapActionToProps = { deleteExpense };\r\n\r\nExpense.propTypes = {\r\n  deleteExpense: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(Expense);\r\n","import React, { Component } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getExpenses } from \"../redux/actions\";\r\n\r\nclass Chartcomponent extends Component {\r\n  componentDidMount() {\r\n    this.props.getExpenses();\r\n  }\r\n  render() {\r\n    let chartData = [[\"Awesome\", \"4\"]];\r\n    this.props.expenses.forEach((element) => {\r\n      const curr = [];\r\n      curr.push(element.title);\r\n      curr.push(element.amount);\r\n      chartData.push(curr);\r\n    });\r\n    console.log(chartData);\r\n    return (\r\n      <div>\r\n        {chartData.length > 1 ? (\r\n          <Chart\r\n            width={\"500px\"}\r\n            height={\"300px\"}\r\n            chartType=\"PieChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={chartData}\r\n            options={{\r\n              title: \"My Daily Activities\",\r\n              // Just add this option\r\n              is3D: true,\r\n            }}\r\n            rootProps={{ \"data-testid\": \"2\" }}\r\n          />\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expenses: state.data.expenses,\r\n});\r\nconst mapActionToProps = { getExpenses };\r\n\r\nChartcomponent.propTypes = {\r\n  expenses: PropTypes.array.isRequired,\r\n  getExpenses: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(Chartcomponent);\r\n","import React, { Component } from \"react\";\r\nimport Expense from \"./Expense\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getExpenses, addExpense } from \"../redux/actions\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Chart from \"./Chartcomponent\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nclass ExpenseList extends Component {\r\n  componentDidMount() {\r\n    this.props.getExpenses();\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addExpense(\r\n      e.target.title.value,\r\n      e.target.amount.value,\r\n      e.target.category.value,\r\n      this.props.getExpenses\r\n    );\r\n    e.target.title.value = \"\";\r\n    e.target.amount.value = \"\";\r\n    e.target.category.value = \"\";\r\n  };\r\n\r\n  render() {\r\n    let counter = 0;\r\n    let total = 0;\r\n    return (\r\n      <div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\" ml-5 form-group row\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-xs-2 mx-2\">\r\n                  <h4>\r\n                    <label>Category</label>\r\n                  </h4>\r\n                  <input className=\"form-control\" id=\"category\" type=\"text\" />\r\n                </div>\r\n                <div className=\"col-xs-3 mx-2\">\r\n                  <h4>\r\n                    <label>Title</label>\r\n                  </h4>\r\n                  <input className=\"form-control\" id=\"title\" type=\"text\" />\r\n                </div>\r\n                <div className=\"col-xs-4 mx-2\">\r\n                  <h4>\r\n                    <label>Amount</label>\r\n                  </h4>\r\n                  <input className=\"form-control\" id=\"amount\" type=\"text\" />\r\n                </div>\r\n              </div>\r\n\r\n              <br />\r\n              <button type=\"submit\" className=\"btn btn-primary mx-2\">\r\n                Add Expense!!\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Chart />\r\n        </div>\r\n\r\n        {this.props.expenses.length === 0 ? (\r\n          <div>Wohoo you do not have any expenses!!</div>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <div>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-5 mx-2\">\r\n                      #\r\n                    </th>\r\n                    <th scope=\"col\">Category</th>\r\n                    <th scope=\"col\">Title</th>\r\n                    <th scope=\"col\">Date</th>\r\n                    <th scope=\"col\">Amount</th>\r\n\r\n                    <th scope=\"col\">Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.props.expenses.map((item) => {\r\n                    counter++;\r\n                    total += item.amount;\r\n                    return (\r\n                      <Expense\r\n                        expense={item}\r\n                        fetchExpenses={this.props.getExpenses}\r\n                        key={item._id}\r\n                        counter={counter}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tbody>\r\n                <thead>\r\n                  <tr>\r\n                    {/* <th scope=\"col\" className=\"px-5 mx-2\">\r\n                      #\r\n                    </th> */}\r\n                    <th colSpan=\"3\" scope=\"col\">\r\n                      Total\r\n                    </th>\r\n\r\n                    <th colSpan=\"3\" scope=\"col\">\r\n                      {total}\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expenses: state.data.expenses,\r\n});\r\nconst mapActionToProps = { getExpenses, addExpense };\r\n\r\nExpenseList.propTypes = {\r\n  expenses: PropTypes.array.isRequired,\r\n  getExpenses: PropTypes.func.isRequired,\r\n  addExpense: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(ExpenseList);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Default from \"./components/Default\";\nimport SideNav from \"./components/Sidenav\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport Title from \"./components/Title\";\nimport ExpenseList from \"./components/ExpenseList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Navbar /> */}\n      <SideNav />\n      <Title name=\"Expense\" title=\"manager\" />\n      <Switch>\n        <Route exact path=\"/\" component={Login}></Route>\n        <Route exact path=\"/home\" component={ExpenseList}></Route>\n        <Route exact path=\"/profile\" component={Profile}></Route>\n        <Route component={Default}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_PROFILE, GET_EXPENSE, ADD_EXPENSE } from \"./types\";\r\n\r\nconst initState = {\r\n  user: {},\r\n  expenses: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  if (action.type === GET_PROFILE) {\r\n    return { ...state, user: action.payload };\r\n  }\r\n  if (action.type === GET_EXPENSE) {\r\n    return { ...state, expenses: action.payload };\r\n  }\r\n  if (action.type === ADD_EXPENSE) {\r\n    return state;\r\n  }\r\n  return state;\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport dataReducer from \"./reducer\";\r\n\r\nconst middleware = [thunk];\r\nconst initState = {};\r\n\r\nconst reducer = combineReducers({\r\n  data: dataReducer,\r\n});\r\n\r\nconst store = createStore(reducer, initState, applyMiddleware(...middleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}